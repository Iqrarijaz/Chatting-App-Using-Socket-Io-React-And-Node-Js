{"ast":null,"code":"var _jsxFileName = \"/home/engineer/Iqrar/React/chatting app/client/src/components/Chat/ChatBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBar = _ref => {\n  _s();\n  let {\n    socket\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const lastMessageRef = useRef(null);\n  useEffect(() => {\n    socket.on(\"newUserResponse\", data => setUsers(data));\n  }, [socket, users]);\n  useEffect(() => {\n    var _lastMessageRef$curre;\n    // 👇️ scroll to bottom every time messages change\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  let filterUser = users.filter(item => item.userName !== localStorage.getItem(\"userName\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Open Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"chat__header\",\n        children: \"ACTIVE USERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__users\",\n        children: filterUser.map(user => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.userName\n        }, user.socketID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBar, \"3Me6HyV3J/47xL8u1FwOiAmf+eQ=\");\n_c = ChatBar;\nexport default ChatBar;\nvar _c;\n$RefreshReg$(_c, \"ChatBar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","ChatBar","_ref","_s","socket","users","setUsers","lastMessageRef","on","data","_lastMessageRef$curre","current","scrollIntoView","behavior","messages","filterUser","filter","item","userName","localStorage","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","socketID","_c","$RefreshReg$"],"sources":["/home/engineer/Iqrar/React/chatting app/client/src/components/Chat/ChatBar.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nconst ChatBar = ({ socket }) => {\n  const [users, setUsers] = useState([]);\n  const lastMessageRef = useRef(null);\n\n  useEffect(() => {\n    socket.on(\"newUserResponse\", (data) => setUsers(data));\n  }, [socket, users]);\n\n  useEffect(() => {\n    // 👇️ scroll to bottom every time messages change\n    lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  let filterUser = users.filter(\n    (item) => item.userName !== localStorage.getItem(\"userName\")\n  );\n\n  return (\n    <div className=\"chat__sidebar\">\n      <h2>Open Chat</h2>\n      <div>\n        <h4 className=\"chat__header\">ACTIVE USERS</h4>\n        <div className=\"chat__users\">\n          {filterUser.map((user) => (\n            <p key={user.socketID}>{user.userName}</p>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,cAAc,GAAGT,MAAM,CAAC,IAAI,CAAC;EAEnCF,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACI,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAKH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxD,CAAC,EAAE,CAACL,MAAM,EAAEC,KAAK,CAAC,CAAC;EAEnBT,SAAS,CAAC,MAAM;IAAA,IAAAc,qBAAA;IACd;IACA,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,IAAIC,UAAU,GAAGV,KAAK,CAACW,MAAM,CAC1BC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC7D;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClB1B,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAIqB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC9C1B,OAAA;QAAKqB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBP,UAAU,CAACY,GAAG,CAAEC,IAAI,iBACnB5B,OAAA;UAAAsB,QAAA,EAAwBM,IAAI,CAACV;QAAQ,GAA7BU,IAAI,CAACC,QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACvB,EAAA,CA9BIF,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}